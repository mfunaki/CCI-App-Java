version: 2

workflows:
  version: 2
  workflow:
    jobs:
      - build_and_test
      - deploy:
          requires:
            - build_and_test

jobs:
  build_and_test:
    parallelism: 2
    environment:
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=true -Dorg.gradle.workers.max=2"
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - run:
          name: テストの実行
          command: |
            chmod +x ./gradlew
            ./gradlew test
      - store_test_results:
      # テスト サマリー (https://circleci.com/ja/docs/2.0/collect-test-data/) に表示するテスト結果をアップロードします
          path: build/test-results/test
      - store_artifacts: # アーティファクト (https://circleci.com/ja/docs/2.0/artifacts/) に表示するテスト結果をアップロードします
          path: build/test-results/test
          when: always
      - run:
          name: JAR の収集
          command: |
            # 他のノードでは以下をスキップします
            if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
              ./gradlew assemble
            fi
      # JAR は最初のビルド コンテナでのみ収集されるため、他のすべてのビルド コンテナでは build/libs が空になります
      - store_artifacts:
          path: build/libs

  deploy:
      # デプロイ例については https://circleci.com/ja/docs/2.0/deployment-integrations/ を参照してください
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - run: echo 'Deploying a system.'

